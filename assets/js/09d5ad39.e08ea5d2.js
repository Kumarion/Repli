"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[30],{3905:(e,t,l)=>{l.d(t,{Zo:()=>u,kt:()=>d});var r=l(67294);function a(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function n(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,r)}return l}function i(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?n(Object(l),!0).forEach((function(t){a(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):n(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function o(e,t){if(null==e)return{};var l,r,a=function(e,t){if(null==e)return{};var l,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)l=n[r],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)l=n[r],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),l=t;return e&&(l="function"==typeof e?e(t):i(i({},t),e)),l},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var l=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(l),d=a,f=m["".concat(c,".").concat(d)]||m[d]||s[d]||n;return l?r.createElement(f,i(i({ref:t},u),{},{components:l})):r.createElement(f,i({ref:t},u))}));function d(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=l.length,i=new Array(n);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<n;p++)i[p]=l[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,l)}m.displayName="MDXCreateElement"},84381:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>n,metadata:()=>o,toc:()=>p});var r=l(87462),a=(l(67294),l(3905));const n={sidebar_position:2},i="Examples",o={unversionedId:"examples",id:"examples",title:"Examples",description:"Simple Example (Server)",source:"@site/docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/Repli/docs/examples",draft:!1,editUrl:"https://github.com/Kumarion/Repli/edit/main/docs/examples.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"About",permalink:"/Repli/docs/intro"},next:{title:"More Examples",permalink:"/Repli/docs/moreexamples"}},c={},p=[{value:"Simple Example (Server)",id:"simple-example-server",level:2},{value:"Simple Example (Client)",id:"simple-example-client",level:2}],u={toc:p};function s(e){let{components:t,...l}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"examples"},"Examples"),(0,a.kt)("h2",{id:"simple-example-server"},"Simple Example (Server)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local Players = game:GetService("Players");\nlocal Repli = require(game:GetService("ReplicatedStorage").Repli);\n\nlocal replicatedValue = Repli.createValue("ReplicatedValue", 0);\nlocal replicatedTable = Repli.createTable("ReplicatedTable", {1, 2, 3});\nprint(replicatedValue:getValue()); -- 0\n\n-- Set the value for all clients to 5\nreplicatedValue:setValue(5);\n\n-- Get the value for all clients\nlocal value = replicatedValue:getValue();\nprint(value); -- 5\n\n-- Individually set the value for each client\nPlayers.PlayerAdded:Connect(function(player)\n    -- Set the value for a specific client\n    replicatedTable:setValueForClient(player, {1, 2, 3, 4});\n\n    -- Get the value for a specific client\n    local value = replicatedTable:getValueForClient(player);\n    print(value); -- {1, 2, 3, 4}\nend);\n')),(0,a.kt)("h2",{id:"simple-example-client"},"Simple Example (Client)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local Players = game:GetService("Players");\nlocal Repli = require(game:GetService("ReplicatedStorage").Repli);\n\n-- Get the value from the server\nlocal replicatedValue = Repli.fromValue("ReplicatedValue");\n\n-- Write a callback to be called when the value changes\nlocal function onValueChanged(newValue)\n    -- Will initially print 0, but will print 5 after the server sets the value\n    print(newValue); -- 5\nend\n\n-- Add the callback to the subscriber method\nreplicatedValue:subscribe(onValueChanged);\n')))}s.isMDXComponent=!0}}]);